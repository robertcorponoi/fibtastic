'use strict';
/**
 * Calc contains methods for performing the binet and reverse
 * binet calculations.
 * 
 * @author Robert Corponoi <robertcorponoi@gmail.com>
 * 
 * @version 1.0.0
 */

/**
 * Binet's formula is used to find a Fibonacci value at a specific location without
 * having to loop through the whole sequence until we arrive at the specified location.
 * 
 * @since 0.1.0
 * @private
 * 
 * @param {number} location The location in the Fibonacci sequence to get the Fibonacci value from.
 * 
 * @returns {number} The Fibonacci value at the specified location.
 */

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.binets = binets;
exports.inverseBinets = inverseBinets;
exports.isFib = isFib;

function binets(location) {
  var phi = 1.618033988749895;
  return Math.round((Math.pow(phi, location) - Math.pow(1 - phi, location)) / Math.sqrt(5));
}
/**
 * The inverse of the Binet's formula which is used to find the location in the Fibonacci sequence
 * of a specified value.
 * 
 * Due to limitations of the formula, this only works for values of 3 or higher.
 * 
 * @since 0.1.0
 * @private
 * 
 * @param {number} value The Fibonacci value to find the location of in the sequence.
 * 
 * @returns {number} The location of the specified value in the Fibonacci sequence.
 */


function inverseBinets(value) {
  var phi = 1.618033988749895;
  return Math.round(Math.log(value * Math.sqrt(5) / 2) / Math.log(phi)) + 1;
}
/**
 * Checks to see whether a specified value is a part of the Fibonacci sequence or not.
 * 
 * This method will return true if the value is a part of the Fibonacci sequence or false
 * if it is not.
 * 
 * @since 0.1.0
 * @private
 * 
 * @param {number} value The value to check if exists in the Fibonacci sequence or not.
 * 
 * @returns {boolean} True if the value is part of the Fibonacci sequence and false otherwise.
 */


function isFib(value) {
  return Number.isInteger(Math.sqrt(5 * Math.pow(value, 2) + 4)) || Number.isInteger(Math.sqrt(5 * Math.pow(value, 2) - 4));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jYWxjLnRzIl0sIm5hbWVzIjpbImJpbmV0cyIsImxvY2F0aW9uIiwicGhpIiwiTWF0aCIsInJvdW5kIiwicG93Iiwic3FydCIsImludmVyc2VCaW5ldHMiLCJ2YWx1ZSIsImxvZyIsImlzRmliIiwiTnVtYmVyIiwiaXNJbnRlZ2VyIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUVBOzs7Ozs7Ozs7QUFTQTs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVdPLFNBQVNBLE1BQVQsQ0FBZ0JDLFFBQWhCLEVBQTBDO0FBRWhELE1BQU1DLEdBQVcsR0FBRyxpQkFBcEI7QUFFQSxTQUFPQyxJQUFJLENBQUNDLEtBQUwsQ0FBVyxDQUFFRCxJQUFJLENBQUNFLEdBQUwsQ0FBU0gsR0FBVCxFQUFjRCxRQUFkLENBQUQsR0FBNkJFLElBQUksQ0FBQ0UsR0FBTCxDQUFTLElBQUlILEdBQWIsRUFBa0JELFFBQWxCLENBQTlCLElBQThERSxJQUFJLENBQUNHLElBQUwsQ0FBVSxDQUFWLENBQXpFLENBQVA7QUFFQTtBQUVEOzs7Ozs7Ozs7Ozs7Ozs7QUFhTyxTQUFTQyxhQUFULENBQXVCQyxLQUF2QixFQUE4QztBQUVwRCxNQUFNTixHQUFXLEdBQUcsaUJBQXBCO0FBRUEsU0FBT0MsSUFBSSxDQUFDQyxLQUFMLENBQVlELElBQUksQ0FBQ00sR0FBTCxDQUFVRCxLQUFLLEdBQUdMLElBQUksQ0FBQ0csSUFBTCxDQUFVLENBQVYsQ0FBVCxHQUF5QixDQUFsQyxDQUFELEdBQTBDSCxJQUFJLENBQUNNLEdBQUwsQ0FBU1AsR0FBVCxDQUFyRCxJQUF1RSxDQUE5RTtBQUVBO0FBRUQ7Ozs7Ozs7Ozs7Ozs7OztBQWFPLFNBQVNRLEtBQVQsQ0FBZUYsS0FBZixFQUF1QztBQUU3QyxTQUFPRyxNQUFNLENBQUNDLFNBQVAsQ0FBaUJULElBQUksQ0FBQ0csSUFBTCxDQUFVLElBQUlILElBQUksQ0FBQ0UsR0FBTCxDQUFTRyxLQUFULEVBQWdCLENBQWhCLENBQUosR0FBeUIsQ0FBbkMsQ0FBakIsS0FBMkRHLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQlQsSUFBSSxDQUFDRyxJQUFMLENBQVUsSUFBSUgsSUFBSSxDQUFDRSxHQUFMLENBQVNHLEtBQVQsRUFBZ0IsQ0FBaEIsQ0FBSixHQUF5QixDQUFuQyxDQUFqQixDQUFsRTtBQUVBIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXHJcblxyXG4vKipcclxuICogQ2FsYyBjb250YWlucyBtZXRob2RzIGZvciBwZXJmb3JtaW5nIHRoZSBiaW5ldCBhbmQgcmV2ZXJzZVxyXG4gKiBiaW5ldCBjYWxjdWxhdGlvbnMuXHJcbiAqIFxyXG4gKiBAYXV0aG9yIFJvYmVydCBDb3Jwb25vaSA8cm9iZXJ0Y29ycG9ub2lAZ21haWwuY29tPlxyXG4gKiBcclxuICogQHZlcnNpb24gMS4wLjBcclxuICovXHJcblxyXG4vKipcclxuICogQmluZXQncyBmb3JtdWxhIGlzIHVzZWQgdG8gZmluZCBhIEZpYm9uYWNjaSB2YWx1ZSBhdCBhIHNwZWNpZmljIGxvY2F0aW9uIHdpdGhvdXRcclxuICogaGF2aW5nIHRvIGxvb3AgdGhyb3VnaCB0aGUgd2hvbGUgc2VxdWVuY2UgdW50aWwgd2UgYXJyaXZlIGF0IHRoZSBzcGVjaWZpZWQgbG9jYXRpb24uXHJcbiAqIFxyXG4gKiBAc2luY2UgMC4xLjBcclxuICogQHByaXZhdGVcclxuICogXHJcbiAqIEBwYXJhbSB7bnVtYmVyfSBsb2NhdGlvbiBUaGUgbG9jYXRpb24gaW4gdGhlIEZpYm9uYWNjaSBzZXF1ZW5jZSB0byBnZXQgdGhlIEZpYm9uYWNjaSB2YWx1ZSBmcm9tLlxyXG4gKiBcclxuICogQHJldHVybnMge251bWJlcn0gVGhlIEZpYm9uYWNjaSB2YWx1ZSBhdCB0aGUgc3BlY2lmaWVkIGxvY2F0aW9uLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGJpbmV0cyhsb2NhdGlvbjogbnVtYmVyKTogbnVtYmVyIHtcclxuXHJcblx0Y29uc3QgcGhpOiBudW1iZXIgPSAxLjYxODAzMzk4ODc0OTg5NTtcclxuXHJcblx0cmV0dXJuIE1hdGgucm91bmQoKChNYXRoLnBvdyhwaGksIGxvY2F0aW9uKSkgLSAoTWF0aC5wb3coMSAtIHBoaSwgbG9jYXRpb24pKSkgLyBNYXRoLnNxcnQoNSkpO1xyXG5cclxufVxyXG5cclxuLyoqXHJcbiAqIFRoZSBpbnZlcnNlIG9mIHRoZSBCaW5ldCdzIGZvcm11bGEgd2hpY2ggaXMgdXNlZCB0byBmaW5kIHRoZSBsb2NhdGlvbiBpbiB0aGUgRmlib25hY2NpIHNlcXVlbmNlXHJcbiAqIG9mIGEgc3BlY2lmaWVkIHZhbHVlLlxyXG4gKiBcclxuICogRHVlIHRvIGxpbWl0YXRpb25zIG9mIHRoZSBmb3JtdWxhLCB0aGlzIG9ubHkgd29ya3MgZm9yIHZhbHVlcyBvZiAzIG9yIGhpZ2hlci5cclxuICogXHJcbiAqIEBzaW5jZSAwLjEuMFxyXG4gKiBAcHJpdmF0ZVxyXG4gKiBcclxuICogQHBhcmFtIHtudW1iZXJ9IHZhbHVlIFRoZSBGaWJvbmFjY2kgdmFsdWUgdG8gZmluZCB0aGUgbG9jYXRpb24gb2YgaW4gdGhlIHNlcXVlbmNlLlxyXG4gKiBcclxuICogQHJldHVybnMge251bWJlcn0gVGhlIGxvY2F0aW9uIG9mIHRoZSBzcGVjaWZpZWQgdmFsdWUgaW4gdGhlIEZpYm9uYWNjaSBzZXF1ZW5jZS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBpbnZlcnNlQmluZXRzKHZhbHVlOiBudW1iZXIpOiBudW1iZXIge1xyXG5cclxuXHRjb25zdCBwaGk6IG51bWJlciA9IDEuNjE4MDMzOTg4NzQ5ODk1O1xyXG5cclxuXHRyZXR1cm4gTWF0aC5yb3VuZCgoTWF0aC5sb2coKHZhbHVlICogTWF0aC5zcXJ0KDUpKSAvIDIpKSAvIChNYXRoLmxvZyhwaGkpKSkgKyAxO1xyXG5cclxufVxyXG5cclxuLyoqXHJcbiAqIENoZWNrcyB0byBzZWUgd2hldGhlciBhIHNwZWNpZmllZCB2YWx1ZSBpcyBhIHBhcnQgb2YgdGhlIEZpYm9uYWNjaSBzZXF1ZW5jZSBvciBub3QuXHJcbiAqIFxyXG4gKiBUaGlzIG1ldGhvZCB3aWxsIHJldHVybiB0cnVlIGlmIHRoZSB2YWx1ZSBpcyBhIHBhcnQgb2YgdGhlIEZpYm9uYWNjaSBzZXF1ZW5jZSBvciBmYWxzZVxyXG4gKiBpZiBpdCBpcyBub3QuXHJcbiAqIFxyXG4gKiBAc2luY2UgMC4xLjBcclxuICogQHByaXZhdGVcclxuICogXHJcbiAqIEBwYXJhbSB7bnVtYmVyfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2sgaWYgZXhpc3RzIGluIHRoZSBGaWJvbmFjY2kgc2VxdWVuY2Ugb3Igbm90LlxyXG4gKiBcclxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIHZhbHVlIGlzIHBhcnQgb2YgdGhlIEZpYm9uYWNjaSBzZXF1ZW5jZSBhbmQgZmFsc2Ugb3RoZXJ3aXNlLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGlzRmliKHZhbHVlOiBudW1iZXIpOiBib29sZWFuIHtcclxuXHJcblx0cmV0dXJuIE51bWJlci5pc0ludGVnZXIoTWF0aC5zcXJ0KDUgKiBNYXRoLnBvdyh2YWx1ZSwgMikgKyA0KSkgfHwgTnVtYmVyLmlzSW50ZWdlcihNYXRoLnNxcnQoNSAqIE1hdGgucG93KHZhbHVlLCAyKSAtIDQpKTtcclxuXHJcbn0iXX0=